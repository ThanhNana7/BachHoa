#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BachHoa.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCTyBHH")]
	public partial class dbQLCTyBHDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertTonKho(TonKho instance);
    partial void UpdateTonKho(TonKho instance);
    partial void DeleteTonKho(TonKho instance);
    partial void InsertBaoCao(BaoCao instance);
    partial void UpdateBaoCao(BaoCao instance);
    partial void DeleteBaoCao(BaoCao instance);
    partial void InsertCTPhieuGH(CTPhieuGH instance);
    partial void UpdateCTPhieuGH(CTPhieuGH instance);
    partial void DeleteCTPhieuGH(CTPhieuGH instance);
    partial void InsertCTPhieuTT(CTPhieuTT instance);
    partial void UpdateCTPhieuTT(CTPhieuTT instance);
    partial void DeleteCTPhieuTT(CTPhieuTT instance);
    partial void InsertCuaHang(CuaHang instance);
    partial void UpdateCuaHang(CuaHang instance);
    partial void DeleteCuaHang(CuaHang instance);
    partial void InsertLoaiHang(LoaiHang instance);
    partial void UpdateLoaiHang(LoaiHang instance);
    partial void DeleteLoaiHang(LoaiHang instance);
    partial void InsertMatHang(MatHang instance);
    partial void UpdateMatHang(MatHang instance);
    partial void DeleteMatHang(MatHang instance);
    partial void InsertNVPhuTrach(NVPhuTrach instance);
    partial void UpdateNVPhuTrach(NVPhuTrach instance);
    partial void DeleteNVPhuTrach(NVPhuTrach instance);
    partial void InsertNVThanhToan(NVThanhToan instance);
    partial void UpdateNVThanhToan(NVThanhToan instance);
    partial void DeleteNVThanhToan(NVThanhToan instance);
    partial void InsertPhieuGiaoHang(PhieuGiaoHang instance);
    partial void UpdatePhieuGiaoHang(PhieuGiaoHang instance);
    partial void DeletePhieuGiaoHang(PhieuGiaoHang instance);
    partial void InsertPhieuThanhToan(PhieuThanhToan instance);
    partial void UpdatePhieuThanhToan(PhieuThanhToan instance);
    partial void DeletePhieuThanhToan(PhieuThanhToan instance);
    #endregion
		
		public dbQLCTyBHDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLCTyBHHConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCTyBHDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCTyBHDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCTyBHDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCTyBHDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<TonKho> TonKhos
		{
			get
			{
				return this.GetTable<TonKho>();
			}
		}
		
		public System.Data.Linq.Table<BaoCao> BaoCaos
		{
			get
			{
				return this.GetTable<BaoCao>();
			}
		}
		
		public System.Data.Linq.Table<CTPhieuGH> CTPhieuGHs
		{
			get
			{
				return this.GetTable<CTPhieuGH>();
			}
		}
		
		public System.Data.Linq.Table<CTPhieuTT> CTPhieuTTs
		{
			get
			{
				return this.GetTable<CTPhieuTT>();
			}
		}
		
		public System.Data.Linq.Table<CuaHang> CuaHangs
		{
			get
			{
				return this.GetTable<CuaHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHang> LoaiHangs
		{
			get
			{
				return this.GetTable<LoaiHang>();
			}
		}
		
		public System.Data.Linq.Table<MatHang> MatHangs
		{
			get
			{
				return this.GetTable<MatHang>();
			}
		}
		
		public System.Data.Linq.Table<NVPhuTrach> NVPhuTraches
		{
			get
			{
				return this.GetTable<NVPhuTrach>();
			}
		}
		
		public System.Data.Linq.Table<NVThanhToan> NVThanhToans
		{
			get
			{
				return this.GetTable<NVThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<PhieuGiaoHang> PhieuGiaoHangs
		{
			get
			{
				return this.GetTable<PhieuGiaoHang>();
			}
		}
		
		public System.Data.Linq.Table<PhieuThanhToan> PhieuThanhToans
		{
			get
			{
				return this.GetTable<PhieuThanhToan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Pass;
		
		private string _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(50)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TonKho")]
	public partial class TonKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayThang;
		
		private int _MSMH;
		
		private System.Nullable<int> _SoLuongDau;
		
		private System.Nullable<int> _SoLuongCuoi;
		
		private System.Nullable<int> _TongSoLuong;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayThangChanging(System.DateTime value);
    partial void OnNgayThangChanged();
    partial void OnMSMHChanging(int value);
    partial void OnMSMHChanged();
    partial void OnSoLuongDauChanging(System.Nullable<int> value);
    partial void OnSoLuongDauChanged();
    partial void OnSoLuongCuoiChanging(System.Nullable<int> value);
    partial void OnSoLuongCuoiChanged();
    partial void OnTongSoLuongChanging(System.Nullable<int> value);
    partial void OnTongSoLuongChanged();
    #endregion
		
		public TonKho()
		{
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThang", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayThang
		{
			get
			{
				return this._NgayThang;
			}
			set
			{
				if ((this._NgayThang != value))
				{
					this.OnNgayThangChanging(value);
					this.SendPropertyChanging();
					this._NgayThang = value;
					this.SendPropertyChanged("NgayThang");
					this.OnNgayThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSMH
		{
			get
			{
				return this._MSMH;
			}
			set
			{
				if ((this._MSMH != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSMHChanging(value);
					this.SendPropertyChanging();
					this._MSMH = value;
					this.SendPropertyChanged("MSMH");
					this.OnMSMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDau", DbType="Int")]
		public System.Nullable<int> SoLuongDau
		{
			get
			{
				return this._SoLuongDau;
			}
			set
			{
				if ((this._SoLuongDau != value))
				{
					this.OnSoLuongDauChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDau = value;
					this.SendPropertyChanged("SoLuongDau");
					this.OnSoLuongDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongCuoi", DbType="Int")]
		public System.Nullable<int> SoLuongCuoi
		{
			get
			{
				return this._SoLuongCuoi;
			}
			set
			{
				if ((this._SoLuongCuoi != value))
				{
					this.OnSoLuongCuoiChanging(value);
					this.SendPropertyChanging();
					this._SoLuongCuoi = value;
					this.SendPropertyChanged("SoLuongCuoi");
					this.OnSoLuongCuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoLuong", DbType="Int")]
		public System.Nullable<int> TongSoLuong
		{
			get
			{
				return this._TongSoLuong;
			}
			set
			{
				if ((this._TongSoLuong != value))
				{
					this.OnTongSoLuongChanging(value);
					this.SendPropertyChanging();
					this._TongSoLuong = value;
					this.SendPropertyChanged("TongSoLuong");
					this.OnTongSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_TonKho", Storage="_MatHang", ThisKey="MSMH", OtherKey="MSMH", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.TonKhos.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.TonKhos.Add(this);
						this._MSMH = value.MSMH;
					}
					else
					{
						this._MSMH = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoCao")]
	public partial class BaoCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _MSMH;
		
		private int _MSBC;
		
		private System.Nullable<System.DateTime> _NgayThangNam;
		
		private System.Nullable<double> _TongTien;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSMHChanging(System.Nullable<int> value);
    partial void OnMSMHChanged();
    partial void OnMSBCChanging(int value);
    partial void OnMSBCChanged();
    partial void OnNgayThangNamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThangNamChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public BaoCao()
		{
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSMH", DbType="Int")]
		public System.Nullable<int> MSMH
		{
			get
			{
				return this._MSMH;
			}
			set
			{
				if ((this._MSMH != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSMHChanging(value);
					this.SendPropertyChanging();
					this._MSMH = value;
					this.SendPropertyChanged("MSMH");
					this.OnMSMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSBC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSBC
		{
			get
			{
				return this._MSBC;
			}
			set
			{
				if ((this._MSBC != value))
				{
					this.OnMSBCChanging(value);
					this.SendPropertyChanging();
					this._MSBC = value;
					this.SendPropertyChanged("MSBC");
					this.OnMSBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThangNam", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThangNam
		{
			get
			{
				return this._NgayThangNam;
			}
			set
			{
				if ((this._NgayThangNam != value))
				{
					this.OnNgayThangNamChanging(value);
					this.SendPropertyChanging();
					this._NgayThangNam = value;
					this.SendPropertyChanged("NgayThangNam");
					this.OnNgayThangNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_BaoCao", Storage="_MatHang", ThisKey="MSMH", OtherKey="MSMH", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.BaoCaos.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.BaoCaos.Add(this);
						this._MSMH = value.MSMH;
					}
					else
					{
						this._MSMH = default(Nullable<int>);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPhieuGH")]
	public partial class CTPhieuGH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SOPG;
		
		private int _MSMH;
		
		private System.Nullable<int> _SoLuongGiao;
		
		private System.Nullable<double> _DonGia;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<MatHang> _MatHang;
		
		private EntityRef<PhieuGiaoHang> _PhieuGiaoHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPGChanging(int value);
    partial void OnSOPGChanged();
    partial void OnMSMHChanging(int value);
    partial void OnMSMHChanged();
    partial void OnSoLuongGiaoChanging(System.Nullable<int> value);
    partial void OnSoLuongGiaoChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTPhieuGH()
		{
			this._MatHang = default(EntityRef<MatHang>);
			this._PhieuGiaoHang = default(EntityRef<PhieuGiaoHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SOPG
		{
			get
			{
				return this._SOPG;
			}
			set
			{
				if ((this._SOPG != value))
				{
					if (this._PhieuGiaoHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOPGChanging(value);
					this.SendPropertyChanging();
					this._SOPG = value;
					this.SendPropertyChanged("SOPG");
					this.OnSOPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSMH
		{
			get
			{
				return this._MSMH;
			}
			set
			{
				if ((this._MSMH != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSMHChanging(value);
					this.SendPropertyChanging();
					this._MSMH = value;
					this.SendPropertyChanged("MSMH");
					this.OnMSMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongGiao", DbType="Int")]
		public System.Nullable<int> SoLuongGiao
		{
			get
			{
				return this._SoLuongGiao;
			}
			set
			{
				if ((this._SoLuongGiao != value))
				{
					this.OnSoLuongGiaoChanging(value);
					this.SendPropertyChanging();
					this._SoLuongGiao = value;
					this.SendPropertyChanged("SoLuongGiao");
					this.OnSoLuongGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_CTPhieuGH", Storage="_MatHang", ThisKey="MSMH", OtherKey="MSMH", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.CTPhieuGHs.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.CTPhieuGHs.Add(this);
						this._MSMH = value.MSMH;
					}
					else
					{
						this._MSMH = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuGiaoHang_CTPhieuGH", Storage="_PhieuGiaoHang", ThisKey="SOPG", OtherKey="SOPG", IsForeignKey=true)]
		public PhieuGiaoHang PhieuGiaoHang
		{
			get
			{
				return this._PhieuGiaoHang.Entity;
			}
			set
			{
				PhieuGiaoHang previousValue = this._PhieuGiaoHang.Entity;
				if (((previousValue != value) 
							|| (this._PhieuGiaoHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuGiaoHang.Entity = null;
						previousValue.CTPhieuGHs.Remove(this);
					}
					this._PhieuGiaoHang.Entity = value;
					if ((value != null))
					{
						value.CTPhieuGHs.Add(this);
						this._SOPG = value.SOPG;
					}
					else
					{
						this._SOPG = default(int);
					}
					this.SendPropertyChanged("PhieuGiaoHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPhieuTT")]
	public partial class CTPhieuTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SOPTT;
		
		private int _MSMH;
		
		private System.Nullable<int> _SoLuongBan;
		
		private System.Nullable<double> _DonGia;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<MatHang> _MatHang;
		
		private EntityRef<PhieuThanhToan> _PhieuThanhToan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPTTChanging(int value);
    partial void OnSOPTTChanged();
    partial void OnMSMHChanging(int value);
    partial void OnMSMHChanged();
    partial void OnSoLuongBanChanging(System.Nullable<int> value);
    partial void OnSoLuongBanChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTPhieuTT()
		{
			this._MatHang = default(EntityRef<MatHang>);
			this._PhieuThanhToan = default(EntityRef<PhieuThanhToan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPTT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SOPTT
		{
			get
			{
				return this._SOPTT;
			}
			set
			{
				if ((this._SOPTT != value))
				{
					if (this._PhieuThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOPTTChanging(value);
					this.SendPropertyChanging();
					this._SOPTT = value;
					this.SendPropertyChanged("SOPTT");
					this.OnSOPTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSMH
		{
			get
			{
				return this._MSMH;
			}
			set
			{
				if ((this._MSMH != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSMHChanging(value);
					this.SendPropertyChanging();
					this._MSMH = value;
					this.SendPropertyChanged("MSMH");
					this.OnMSMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongBan", DbType="Int")]
		public System.Nullable<int> SoLuongBan
		{
			get
			{
				return this._SoLuongBan;
			}
			set
			{
				if ((this._SoLuongBan != value))
				{
					this.OnSoLuongBanChanging(value);
					this.SendPropertyChanging();
					this._SoLuongBan = value;
					this.SendPropertyChanged("SoLuongBan");
					this.OnSoLuongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_CTPhieuTT", Storage="_MatHang", ThisKey="MSMH", OtherKey="MSMH", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.CTPhieuTTs.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.CTPhieuTTs.Add(this);
						this._MSMH = value.MSMH;
					}
					else
					{
						this._MSMH = default(int);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuThanhToan_CTPhieuTT", Storage="_PhieuThanhToan", ThisKey="SOPTT", OtherKey="SOPTT", IsForeignKey=true)]
		public PhieuThanhToan PhieuThanhToan
		{
			get
			{
				return this._PhieuThanhToan.Entity;
			}
			set
			{
				PhieuThanhToan previousValue = this._PhieuThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._PhieuThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuThanhToan.Entity = null;
						previousValue.CTPhieuTTs.Remove(this);
					}
					this._PhieuThanhToan.Entity = value;
					if ((value != null))
					{
						value.CTPhieuTTs.Add(this);
						this._SOPTT = value.SOPTT;
					}
					else
					{
						this._SOPTT = default(int);
					}
					this.SendPropertyChanged("PhieuThanhToan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CuaHang")]
	public partial class CuaHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSCH;
		
		private string _TenCH;
		
		private int _MSLH;
		
		private string _DiaChi;
		
		private System.Nullable<int> _NvPhuTrach;
		
		private string _SDT;
		
		private EntityRef<LoaiHang> _LoaiHang;
		
		private EntityRef<NVPhuTrach> _NVPhuTrach1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSCHChanging(int value);
    partial void OnMSCHChanged();
    partial void OnTenCHChanging(string value);
    partial void OnTenCHChanged();
    partial void OnMSLHChanging(int value);
    partial void OnMSLHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNvPhuTrachChanging(System.Nullable<int> value);
    partial void OnNvPhuTrachChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public CuaHang()
		{
			this._LoaiHang = default(EntityRef<LoaiHang>);
			this._NVPhuTrach1 = default(EntityRef<NVPhuTrach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSCH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSCH
		{
			get
			{
				return this._MSCH;
			}
			set
			{
				if ((this._MSCH != value))
				{
					this.OnMSCHChanging(value);
					this.SendPropertyChanging();
					this._MSCH = value;
					this.SendPropertyChanged("MSCH");
					this.OnMSCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenCH
		{
			get
			{
				return this._TenCH;
			}
			set
			{
				if ((this._TenCH != value))
				{
					this.OnTenCHChanging(value);
					this.SendPropertyChanging();
					this._TenCH = value;
					this.SendPropertyChanged("TenCH");
					this.OnTenCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSLH", DbType="Int NOT NULL")]
		public int MSLH
		{
			get
			{
				return this._MSLH;
			}
			set
			{
				if ((this._MSLH != value))
				{
					if (this._LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSLHChanging(value);
					this.SendPropertyChanging();
					this._MSLH = value;
					this.SendPropertyChanged("MSLH");
					this.OnMSLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NvPhuTrach", DbType="Int")]
		public System.Nullable<int> NvPhuTrach
		{
			get
			{
				return this._NvPhuTrach;
			}
			set
			{
				if ((this._NvPhuTrach != value))
				{
					if (this._NVPhuTrach1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNvPhuTrachChanging(value);
					this.SendPropertyChanging();
					this._NvPhuTrach = value;
					this.SendPropertyChanged("NvPhuTrach");
					this.OnNvPhuTrachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_CuaHang", Storage="_LoaiHang", ThisKey="MSLH", OtherKey="MSLH", IsForeignKey=true)]
		public LoaiHang LoaiHang
		{
			get
			{
				return this._LoaiHang.Entity;
			}
			set
			{
				LoaiHang previousValue = this._LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHang.Entity = null;
						previousValue.CuaHangs.Remove(this);
					}
					this._LoaiHang.Entity = value;
					if ((value != null))
					{
						value.CuaHangs.Add(this);
						this._MSLH = value.MSLH;
					}
					else
					{
						this._MSLH = default(int);
					}
					this.SendPropertyChanged("LoaiHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NVPhuTrach_CuaHang", Storage="_NVPhuTrach1", ThisKey="NvPhuTrach", OtherKey="MSNV", IsForeignKey=true)]
		public NVPhuTrach NVPhuTrach1
		{
			get
			{
				return this._NVPhuTrach1.Entity;
			}
			set
			{
				NVPhuTrach previousValue = this._NVPhuTrach1.Entity;
				if (((previousValue != value) 
							|| (this._NVPhuTrach1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NVPhuTrach1.Entity = null;
						previousValue.CuaHangs.Remove(this);
					}
					this._NVPhuTrach1.Entity = value;
					if ((value != null))
					{
						value.CuaHangs.Add(this);
						this._NvPhuTrach = value.MSNV;
					}
					else
					{
						this._NvPhuTrach = default(Nullable<int>);
					}
					this.SendPropertyChanged("NVPhuTrach1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHang")]
	public partial class LoaiHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSLH;
		
		private string _TenLoaiHang;
		
		private string _HinhAnh;
		
		private EntitySet<CuaHang> _CuaHangs;
		
		private EntitySet<MatHang> _MatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSLHChanging(int value);
    partial void OnMSLHChanged();
    partial void OnTenLoaiHangChanging(string value);
    partial void OnTenLoaiHangChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public LoaiHang()
		{
			this._CuaHangs = new EntitySet<CuaHang>(new Action<CuaHang>(this.attach_CuaHangs), new Action<CuaHang>(this.detach_CuaHangs));
			this._MatHangs = new EntitySet<MatHang>(new Action<MatHang>(this.attach_MatHangs), new Action<MatHang>(this.detach_MatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSLH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSLH
		{
			get
			{
				return this._MSLH;
			}
			set
			{
				if ((this._MSLH != value))
				{
					this.OnMSLHChanging(value);
					this.SendPropertyChanging();
					this._MSLH = value;
					this.SendPropertyChanged("MSLH");
					this.OnMSLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiHang", DbType="NVarChar(50)")]
		public string TenLoaiHang
		{
			get
			{
				return this._TenLoaiHang;
			}
			set
			{
				if ((this._TenLoaiHang != value))
				{
					this.OnTenLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiHang = value;
					this.SendPropertyChanged("TenLoaiHang");
					this.OnTenLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_CuaHang", Storage="_CuaHangs", ThisKey="MSLH", OtherKey="MSLH")]
		public EntitySet<CuaHang> CuaHangs
		{
			get
			{
				return this._CuaHangs;
			}
			set
			{
				this._CuaHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_MatHang", Storage="_MatHangs", ThisKey="MSLH", OtherKey="MSLH")]
		public EntitySet<MatHang> MatHangs
		{
			get
			{
				return this._MatHangs;
			}
			set
			{
				this._MatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CuaHangs(CuaHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = this;
		}
		
		private void detach_CuaHangs(CuaHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = null;
		}
		
		private void attach_MatHangs(MatHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = this;
		}
		
		private void detach_MatHangs(MatHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatHang")]
	public partial class MatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSMH;
		
		private System.Nullable<int> _MSLH;
		
		private string _TenHang;
		
		private System.Nullable<int> _SoLuong;
		
		private string _TrangThai;
		
		private System.Nullable<double> _DonGia;
		
		private string _HinhAnh;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private EntitySet<TonKho> _TonKhos;
		
		private EntitySet<BaoCao> _BaoCaos;
		
		private EntitySet<CTPhieuGH> _CTPhieuGHs;
		
		private EntitySet<CTPhieuTT> _CTPhieuTTs;
		
		private EntityRef<LoaiHang> _LoaiHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSMHChanging(int value);
    partial void OnMSMHChanged();
    partial void OnMSLHChanging(System.Nullable<int> value);
    partial void OnMSLHChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    #endregion
		
		public MatHang()
		{
			this._TonKhos = new EntitySet<TonKho>(new Action<TonKho>(this.attach_TonKhos), new Action<TonKho>(this.detach_TonKhos));
			this._BaoCaos = new EntitySet<BaoCao>(new Action<BaoCao>(this.attach_BaoCaos), new Action<BaoCao>(this.detach_BaoCaos));
			this._CTPhieuGHs = new EntitySet<CTPhieuGH>(new Action<CTPhieuGH>(this.attach_CTPhieuGHs), new Action<CTPhieuGH>(this.detach_CTPhieuGHs));
			this._CTPhieuTTs = new EntitySet<CTPhieuTT>(new Action<CTPhieuTT>(this.attach_CTPhieuTTs), new Action<CTPhieuTT>(this.detach_CTPhieuTTs));
			this._LoaiHang = default(EntityRef<LoaiHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSMH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSMH
		{
			get
			{
				return this._MSMH;
			}
			set
			{
				if ((this._MSMH != value))
				{
					this.OnMSMHChanging(value);
					this.SendPropertyChanging();
					this._MSMH = value;
					this.SendPropertyChanged("MSMH");
					this.OnMSMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSLH", DbType="Int")]
		public System.Nullable<int> MSLH
		{
			get
			{
				return this._MSLH;
			}
			set
			{
				if ((this._MSLH != value))
				{
					if (this._LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSLHChanging(value);
					this.SendPropertyChanging();
					this._MSLH = value;
					this.SendPropertyChanged("MSLH");
					this.OnMSLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NVarChar(50)")]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_TonKho", Storage="_TonKhos", ThisKey="MSMH", OtherKey="MSMH")]
		public EntitySet<TonKho> TonKhos
		{
			get
			{
				return this._TonKhos;
			}
			set
			{
				this._TonKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_BaoCao", Storage="_BaoCaos", ThisKey="MSMH", OtherKey="MSMH")]
		public EntitySet<BaoCao> BaoCaos
		{
			get
			{
				return this._BaoCaos;
			}
			set
			{
				this._BaoCaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_CTPhieuGH", Storage="_CTPhieuGHs", ThisKey="MSMH", OtherKey="MSMH")]
		public EntitySet<CTPhieuGH> CTPhieuGHs
		{
			get
			{
				return this._CTPhieuGHs;
			}
			set
			{
				this._CTPhieuGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_CTPhieuTT", Storage="_CTPhieuTTs", ThisKey="MSMH", OtherKey="MSMH")]
		public EntitySet<CTPhieuTT> CTPhieuTTs
		{
			get
			{
				return this._CTPhieuTTs;
			}
			set
			{
				this._CTPhieuTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_MatHang", Storage="_LoaiHang", ThisKey="MSLH", OtherKey="MSLH", IsForeignKey=true)]
		public LoaiHang LoaiHang
		{
			get
			{
				return this._LoaiHang.Entity;
			}
			set
			{
				LoaiHang previousValue = this._LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHang.Entity = null;
						previousValue.MatHangs.Remove(this);
					}
					this._LoaiHang.Entity = value;
					if ((value != null))
					{
						value.MatHangs.Add(this);
						this._MSLH = value.MSLH;
					}
					else
					{
						this._MSLH = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_CTPhieuGHs(CTPhieuGH entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_CTPhieuGHs(CTPhieuGH entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_CTPhieuTTs(CTPhieuTT entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_CTPhieuTTs(CTPhieuTT entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NVPhuTrach")]
	public partial class NVPhuTrach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSNV;
		
		private string _HoTen;
		
		private string _Phai;
		
		private System.Nullable<System.DateTime> _NamSinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private EntitySet<CuaHang> _CuaHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSNVChanging(int value);
    partial void OnMSNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnPhaiChanging(string value);
    partial void OnPhaiChanged();
    partial void OnNamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NVPhuTrach()
		{
			this._CuaHangs = new EntitySet<CuaHang>(new Action<CuaHang>(this.attach_CuaHangs), new Action<CuaHang>(this.detach_CuaHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="NVarChar(50)")]
		public string Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NVPhuTrach_CuaHang", Storage="_CuaHangs", ThisKey="MSNV", OtherKey="NvPhuTrach")]
		public EntitySet<CuaHang> CuaHangs
		{
			get
			{
				return this._CuaHangs;
			}
			set
			{
				this._CuaHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CuaHangs(CuaHang entity)
		{
			this.SendPropertyChanging();
			entity.NVPhuTrach1 = this;
		}
		
		private void detach_CuaHangs(CuaHang entity)
		{
			this.SendPropertyChanging();
			entity.NVPhuTrach1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NVThanhToan")]
	public partial class NVThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSNV;
		
		private string _HoTen;
		
		private bool _Phai;
		
		private System.DateTime _NamSinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private EntitySet<PhieuThanhToan> _PhieuThanhToans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSNVChanging(int value);
    partial void OnMSNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnPhaiChanging(bool value);
    partial void OnPhaiChanged();
    partial void OnNamSinhChanging(System.DateTime value);
    partial void OnNamSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NVThanhToan()
		{
			this._PhieuThanhToans = new EntitySet<PhieuThanhToan>(new Action<PhieuThanhToan>(this.attach_PhieuThanhToans), new Action<PhieuThanhToan>(this.detach_PhieuThanhToans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="Bit NOT NULL")]
		public bool Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date NOT NULL")]
		public System.DateTime NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NVThanhToan_PhieuThanhToan", Storage="_PhieuThanhToans", ThisKey="MSNV", OtherKey="MSVN")]
		public EntitySet<PhieuThanhToan> PhieuThanhToans
		{
			get
			{
				return this._PhieuThanhToans;
			}
			set
			{
				this._PhieuThanhToans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuThanhToans(PhieuThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.NVThanhToan = this;
		}
		
		private void detach_PhieuThanhToans(PhieuThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.NVThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuGiaoHang")]
	public partial class PhieuGiaoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SOPG;
		
		private System.Nullable<System.DateTime> _NgayLapPhieu;
		
		private System.Nullable<int> _MSCH;
		
		private System.Nullable<int> _MSNV;
		
		private System.Nullable<double> _TongCong;
		
		private string _TrangThai;
		
		private EntitySet<CTPhieuGH> _CTPhieuGHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPGChanging(int value);
    partial void OnSOPGChanged();
    partial void OnNgayLapPhieuChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapPhieuChanged();
    partial void OnMSCHChanging(System.Nullable<int> value);
    partial void OnMSCHChanged();
    partial void OnMSNVChanging(System.Nullable<int> value);
    partial void OnMSNVChanged();
    partial void OnTongCongChanging(System.Nullable<double> value);
    partial void OnTongCongChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public PhieuGiaoHang()
		{
			this._CTPhieuGHs = new EntitySet<CTPhieuGH>(new Action<CTPhieuGH>(this.attach_CTPhieuGHs), new Action<CTPhieuGH>(this.detach_CTPhieuGHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SOPG
		{
			get
			{
				return this._SOPG;
			}
			set
			{
				if ((this._SOPG != value))
				{
					this.OnSOPGChanging(value);
					this.SendPropertyChanging();
					this._SOPG = value;
					this.SendPropertyChanged("SOPG");
					this.OnSOPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLapPhieu", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLapPhieu
		{
			get
			{
				return this._NgayLapPhieu;
			}
			set
			{
				if ((this._NgayLapPhieu != value))
				{
					this.OnNgayLapPhieuChanging(value);
					this.SendPropertyChanging();
					this._NgayLapPhieu = value;
					this.SendPropertyChanged("NgayLapPhieu");
					this.OnNgayLapPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSCH", DbType="Int")]
		public System.Nullable<int> MSCH
		{
			get
			{
				return this._MSCH;
			}
			set
			{
				if ((this._MSCH != value))
				{
					this.OnMSCHChanging(value);
					this.SendPropertyChanging();
					this._MSCH = value;
					this.SendPropertyChanged("MSCH");
					this.OnMSCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", DbType="Int")]
		public System.Nullable<int> MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongCong", DbType="Float")]
		public System.Nullable<double> TongCong
		{
			get
			{
				return this._TongCong;
			}
			set
			{
				if ((this._TongCong != value))
				{
					this.OnTongCongChanging(value);
					this.SendPropertyChanging();
					this._TongCong = value;
					this.SendPropertyChanged("TongCong");
					this.OnTongCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuGiaoHang_CTPhieuGH", Storage="_CTPhieuGHs", ThisKey="SOPG", OtherKey="SOPG")]
		public EntitySet<CTPhieuGH> CTPhieuGHs
		{
			get
			{
				return this._CTPhieuGHs;
			}
			set
			{
				this._CTPhieuGHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuGHs(CTPhieuGH entity)
		{
			this.SendPropertyChanging();
			entity.PhieuGiaoHang = this;
		}
		
		private void detach_CTPhieuGHs(CTPhieuGH entity)
		{
			this.SendPropertyChanging();
			entity.PhieuGiaoHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuThanhToan")]
	public partial class PhieuThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SOPTT;
		
		private System.DateTime _NgayLapPhieu;
		
		private int _MSCH;
		
		private int _MSVN;
		
		private double _TongCong;
		
		private string _TrangThai;
		
		private EntitySet<CTPhieuTT> _CTPhieuTTs;
		
		private EntityRef<NVThanhToan> _NVThanhToan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPTTChanging(int value);
    partial void OnSOPTTChanged();
    partial void OnNgayLapPhieuChanging(System.DateTime value);
    partial void OnNgayLapPhieuChanged();
    partial void OnMSCHChanging(int value);
    partial void OnMSCHChanged();
    partial void OnMSVNChanging(int value);
    partial void OnMSVNChanged();
    partial void OnTongCongChanging(double value);
    partial void OnTongCongChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public PhieuThanhToan()
		{
			this._CTPhieuTTs = new EntitySet<CTPhieuTT>(new Action<CTPhieuTT>(this.attach_CTPhieuTTs), new Action<CTPhieuTT>(this.detach_CTPhieuTTs));
			this._NVThanhToan = default(EntityRef<NVThanhToan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPTT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SOPTT
		{
			get
			{
				return this._SOPTT;
			}
			set
			{
				if ((this._SOPTT != value))
				{
					this.OnSOPTTChanging(value);
					this.SendPropertyChanging();
					this._SOPTT = value;
					this.SendPropertyChanged("SOPTT");
					this.OnSOPTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLapPhieu", DbType="Date NOT NULL")]
		public System.DateTime NgayLapPhieu
		{
			get
			{
				return this._NgayLapPhieu;
			}
			set
			{
				if ((this._NgayLapPhieu != value))
				{
					this.OnNgayLapPhieuChanging(value);
					this.SendPropertyChanging();
					this._NgayLapPhieu = value;
					this.SendPropertyChanged("NgayLapPhieu");
					this.OnNgayLapPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSCH", DbType="Int NOT NULL")]
		public int MSCH
		{
			get
			{
				return this._MSCH;
			}
			set
			{
				if ((this._MSCH != value))
				{
					this.OnMSCHChanging(value);
					this.SendPropertyChanging();
					this._MSCH = value;
					this.SendPropertyChanged("MSCH");
					this.OnMSCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSVN", DbType="Int NOT NULL")]
		public int MSVN
		{
			get
			{
				return this._MSVN;
			}
			set
			{
				if ((this._MSVN != value))
				{
					if (this._NVThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSVNChanging(value);
					this.SendPropertyChanging();
					this._MSVN = value;
					this.SendPropertyChanged("MSVN");
					this.OnMSVNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongCong", DbType="Float NOT NULL")]
		public double TongCong
		{
			get
			{
				return this._TongCong;
			}
			set
			{
				if ((this._TongCong != value))
				{
					this.OnTongCongChanging(value);
					this.SendPropertyChanging();
					this._TongCong = value;
					this.SendPropertyChanged("TongCong");
					this.OnTongCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuThanhToan_CTPhieuTT", Storage="_CTPhieuTTs", ThisKey="SOPTT", OtherKey="SOPTT")]
		public EntitySet<CTPhieuTT> CTPhieuTTs
		{
			get
			{
				return this._CTPhieuTTs;
			}
			set
			{
				this._CTPhieuTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NVThanhToan_PhieuThanhToan", Storage="_NVThanhToan", ThisKey="MSVN", OtherKey="MSNV", IsForeignKey=true)]
		public NVThanhToan NVThanhToan
		{
			get
			{
				return this._NVThanhToan.Entity;
			}
			set
			{
				NVThanhToan previousValue = this._NVThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._NVThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NVThanhToan.Entity = null;
						previousValue.PhieuThanhToans.Remove(this);
					}
					this._NVThanhToan.Entity = value;
					if ((value != null))
					{
						value.PhieuThanhToans.Add(this);
						this._MSVN = value.MSNV;
					}
					else
					{
						this._MSVN = default(int);
					}
					this.SendPropertyChanged("NVThanhToan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuTTs(CTPhieuTT entity)
		{
			this.SendPropertyChanging();
			entity.PhieuThanhToan = this;
		}
		
		private void detach_CTPhieuTTs(CTPhieuTT entity)
		{
			this.SendPropertyChanging();
			entity.PhieuThanhToan = null;
		}
	}
}
#pragma warning restore 1591
